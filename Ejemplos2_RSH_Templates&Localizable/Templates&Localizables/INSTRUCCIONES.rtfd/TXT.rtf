{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qj\partightenfactor0

\f0\fs24 \cf0 ****************************************************************************************************************************************************************************************************************************************\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0
\cf0 INTRODUCCI\'d3N DE TEMPLATES & LOCALIZABLE.STRINGS\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qj\partightenfactor0
\cf0 ****************************************************************************************************************************************************************************************************************************************\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qj\partightenfactor0
\cf0 Lo primero que hay que tener en cuenta es que la template tiene que estar formada por unos determinados ficheros que ser\'e1n los que nos permitan generar los que deseemos:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qj\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-10-22 at 16.43.56.png \width16580 \height2620 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
Los 2 ficheros .swift en este caso, ser\'e1n los ficheros pertenecientes al ViewController y al Presenter. Tendremos que hacerlos a imagen y semejanza de la arquitectura que queramos aplicar.\
\
Los 3 ficheros inferiores ser\'e1n los que nos configuren y generen la Template. Pueden usarse estos como ejemplo para modificarlos y crear nuestras propias templates.\
\
Esta carpeta .xctemplate deber\'e1 estar alojada en el directorio:  /Users/ID_DEL_USUARIO/Library/Developer/Xcode/Templates\
A continuaci\'f3n, pegaremos la carpeta de las templates en ese directorio.\
Y final mente, dentro de XCode, haremos lo siguiente:\
	File -> New -> File... -> (Scroll abajo del todo) Seleccionar en la secci\'f3n "miCarrefourTemplate": "carrefourScene".\
\
De esta forma ya tendremos nuestra template dentro del proyecto.\
\
Como forma de aprendizaje, es aconsejable crear un proyecto nuevo en el que veremos que el archivo ViewController, que est\'e1 asignado a "Main.storyboard", ha sido sustituido en su lugar por nuestra template llamada "IntroducedTemplateViewController". De esta forma trabajaremos con nuestra template dentro del proyecto asign\'e1ndola al Controlador creado dentro de "Main.Storyboard"\
\
Una vez introducidas en el proyecto, podremos comprobar dentro de "Main.Storyboard" que seleccionando el icono indicado en la imagen, dentro de la secci\'f3n custom class, estar\'e1 asignado el Controlador a la clase "IntroducedTemplateViewController"\
\
 {{\NeXTGraphic 569E6E1F-E7FB-4CCC-82B1-C27CF03E4C95.png \width6360 \height10380 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
Esto quiere decir que podremos trabajar directamente sobre el archivo creado de nuestra template y comunicarnos con el controlador para gestionarlo ya sea de forma visual o por c\'f3digo. Lo que haremos sera a\'f1adir el @IBOutlet del label en el archivo "IntroducedTemplateViewController.swift". Una vez a\'f1adido, podremos observar como se ha trabajado con \'e9l utilizando la arquitectura MVP. \
\
Para a\'f1adir un archivo de Strings, el paso realizaremos ser\'e1 File -> New -> File... -> Secci\'f3n "Resources" -> Strings File. A este fichero, por convenio le llamaremos "Localizable". Una vez a\'f1adido ser\'e1 tan sencillo como repetir exactamente lo mismo que se ha hecho en el c\'f3digo.\
\
De esta forma tendremos un proyecto sencillo con arquitectura MVP, con un archivo de strings y listo para seguir trabajando.\
\
\
\
}